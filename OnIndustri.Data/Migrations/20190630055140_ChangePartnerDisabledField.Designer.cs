// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnIndustri.Data.Database;

namespace OnIndustri.Data.Migrations
{
    [DbContext(typeof(PartnerContext))]
    [Migration("20190630055140_ChangePartnerDisabledField")]
    partial class ChangePartnerDisabledField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine");

                    b.Property<string>("City");

                    b.Property<string>("Contact");

                    b.Property<string>("Country");

                    b.Property<string>("InternalType");

                    b.Property<bool>("IsDefault");

                    b.Property<int>("PartnerId");

                    b.Property<string>("Phone");

                    b.Property<string>("PostCode");

                    b.Property<string>("ShortName");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("Name");

                    b.Property<int>("PartnerId");

                    b.Property<string>("Phone");

                    b.Property<string>("Position");

                    b.Property<string>("QQ");

                    b.Property<string>("WeChat");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<string>("Address");

                    b.Property<string>("Address2");

                    b.Property<string>("AddressAndPhone");

                    b.Property<string>("BankAccount");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreditTerm");

                    b.Property<string>("Currency");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("InternalType");

                    b.Property<bool>("IsDisabled");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<string>("PartnerType");

                    b.Property<string>("Remark");

                    b.Property<string>("State");

                    b.Property<string>("TIN");

                    b.Property<decimal>("TaxRate");

                    b.HasKey("Id");

                    b.ToTable("Partner");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Partner");
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Customer", b =>
                {
                    b.HasBaseType("OnIndustri.Data.Model.MasterData.Partner");

                    b.ToTable("Customer");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Supplier", b =>
                {
                    b.HasBaseType("OnIndustri.Data.Model.MasterData.Partner");

                    b.ToTable("Supplier");

                    b.HasDiscriminator().HasValue("Supplier");
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Address", b =>
                {
                    b.HasOne("OnIndustri.Data.Model.MasterData.Partner", "Partner")
                        .WithMany("Addresses")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnIndustri.Data.Model.MasterData.Contact", b =>
                {
                    b.HasOne("OnIndustri.Data.Model.MasterData.Partner", "Partner")
                        .WithMany("Contacts")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
